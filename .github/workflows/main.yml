name: build
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/my-organization/my-app:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
            scan-type: 'fs'
            ignore-unfixed: true
            format: 'table'
            output: 'trivy-results.table'
            severity: 'CRITICAL'
          
      - name: Upload Scan Results
        if: steps.Build.output.trivy-results.txt == 'true'
        uses: MeilCli/slack-upload-file@v3
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: 'trivy-results.txt'
          initial_comment: 'post by slack-upload-file'

      - name: Login Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      

      - name: cosign-installer
        uses: sigstore/cosign-installer@v3.1.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.FreddyChen5}}
          password: ${{ secrets.KEY }}

      - id: docker_meta
        uses: docker/metadata-action@v4.4.0
        with:
         images: ghcr.io/sigstore/sample-honk
         tags: type=sha,format=long
  
      - name: Build and Push container images
        uses: docker/build-push-action@v4.0.0
        id: build-and-push
        with:
            platforms: linux/amd64,linux/arm/v7,linux/arm64
            push: true
            tags: ${{ steps.docker_meta.outputs.tags }}
        

      - name: Sign image with a key
        run: |
          cosign sign --yes --key env://COSIGN_KEY "${TAGS}@${DIGEST}"
        env:
          TAGS: ${{ steps.docker_meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}


    


         
                    
        
        
            

          

